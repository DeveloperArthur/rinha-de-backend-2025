x-service-templates:
  payment-processor: &payment-processor
    image: zanfranceschi/payment-processor:arm64-20250707101540
    networks:
      - payment-processor
      - payment-processor-db
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: "100MB"

  payment-processor-db: &payment-processor-db
    image: postgres:17-alpine
    networks:
      - payment-processor-db
    volumes:
      - ./init-processors.sql:/docker-entrypoint-initdb.d/init-processors.sql
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rinha
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: "250MB"

services:

  # COMPONENTES TERCEIROS

  payment-processor-1:
    <<: *payment-processor
    container_name: payment-processor-default
    hostname: payment-processor-default
    environment:
      - TRANSACTION_FEE=0.05
      - RATE_LIMIT_SECONDS=5
      - INITIAL_TOKEN=123
      - DB_CONNECTION_STRING=Host=payment-processor-default-db;Port=5432;Database=rinha;Username=postgres;Password=postgres;Minimum Pool Size=15;Maximum Pool Size=20;Connection Pruning Interval=3
    ports:
      - 8001:8080
    depends_on:
      - payment-processor-db-1

  payment-processor-db-1:
    <<: *payment-processor-db
    container_name: payment-processor-default-db
    hostname: payment-processor-default-db
    ports:
      - 54321:5432

  payment-processor-2:
    <<: *payment-processor
    container_name: payment-processor-fallback
    hostname: payment-processor-fallback
    environment:
      - TRANSACTION_FEE=0.15
      - RATE_LIMIT_SECONDS=5
      - INITIAL_TOKEN=123
      - DB_CONNECTION_STRING=Host=payment-processor-fallback-db;Port=5432;Database=rinha;Username=postgres;Password=postgres;Minimum Pool Size=15;Maximum Pool Size=20;Connection Pruning Interval=3
    ports:
      - 8002:8080
    depends_on:
      - payment-processor-db-2

  payment-processor-db-2:
    <<: *payment-processor-db
    container_name: payment-processor-fallback-db
    hostname: payment-processor-fallback-db
    ports:
      - 54322:5432

  # MEUS COMPONENTES

  clojure-instance:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - payment-processor-1
      - payment-processor-2
    restart: on-failure
    networks:
      - payment-processor

  clojure-instance-2:
    build: .
    ports:
      - "8081:8080"
    depends_on:
      - postgres
      - payment-processor-1
      - payment-processor-2
    restart: on-failure
    networks:
      - payment-processor

  postgres:
    image: "postgres"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=root
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./init-mydb.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin-compose:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "arthur@tatay.com"
      PGADMIN_DEFAULT_PASSWORD: "123456"
    ports:
      - "54323:80"
    depends_on:
      - postgres

# Para configurar o banco de dados acesse http://localhost:54321/browser/
# faça login com as credenciais que estão no `docker-compose` e crie um server
# Na aba de connections preencha:
# - maintenance database, username e password com o valor "root"
# - port tem o valor "5432"
# - para preencher host você precisa executar `docker-compose exec postgres sh` pra entrar no container
#   e executar `hostname -i` para pegar o host e preencha o campo de host

networks:
  payment-processor:
    name: payment-processor
    driver: bridge
  payment-processor-db:
    driver: bridge